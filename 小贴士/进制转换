//整形专二进制字符串
- (NSString *)intToStr2:(long)innn {
    //预判断2进制位数
    long num = [NSString stringWithFormat:@"%lx", innn].length*4;
    bool a[num];
    long i;
    
    //从后往前便利入参，取2的模模存入数组，再除以2
    for (i = num-1; i >= 0; i--) {
        a[i] = innn % 2;
        innn /= 2;
    }
    
    //拼接每一位二进制
    NSString * strr = @"";
    for (i = 0; i < num; i++) {
        strr = [strr stringByAppendingFormat:@"%d", a[i]];
    }
    
    return strr;
}

//任何整型转2进制字符串
- (NSString *)intToStr2b:(long)innn {
    //生成对照表
    NSDictionary * dic = @{
                           @"0":@"0000",
                           @"1":@"0001",
                           @"2":@"0010",
                           @"3":@"0011",
                           @"4":@"0100",
                           @"5":@"0101",
                           @"6":@"0110",
                           @"7":@"0111",
                           @"8":@"1000",
                           @"9":@"1001",
                           @"a":@"1010",
                           @"b":@"1011",
                           @"c":@"1100",
                           @"d":@"1101",
                           @"e":@"1110",
                           @"f":@"1111"
                           };
    
    //转16进制
    NSString * ss = [NSString stringWithFormat:@"%lx", innn];
    
    //结果
    NSString * returnStr = @"";
    
    //每一位做对照
    for (int i = 0; i < ss.length; i++) {
        returnStr = [returnStr stringByAppendingString:dic[[NSString stringWithFormat:@"%c", [ss characterAtIndex:i]]]];
    }
    
    return returnStr;
}

//二进制字符串转整型
- (long)str2ToInt10:(NSString *)innn {
    //补齐4的倍数位
    for (int i = 0; i < innn.length%4; i++) {
        innn = [@"0" stringByAppendingString:innn];
    }
    
    //遍历二进制字符串，每位有1的地方，算出2的他所在位置次方的得数，累加
    long sum = 0;
    int j = 0;
    for (int i = (int)innn.length-1; i >= 0; i--) {
        long aa = [innn characterAtIndex:i]-'0';
        if (aa) {
            sum += (int)pow(2, j);
        }
        j++;
    }
    
    return sum;
}

//字符串转相同16进制
- (UInt32)strToSame16WithStr:(NSString *)str {
    UInt32 bbb = 0x0;
    for (int i = 0; i < str.length; i++) {
        bbb += ([str characterAtIndex:i]-'0')*pow(16, str.length-i-1);
    }
    return bbb;
}