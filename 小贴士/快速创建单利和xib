#ifndef Singleton_h
#define Singleton_h
#pragma mark - @interface

/**
 功能:
 快速创建单例
 使用方法:
 1.将 singleton_interface(类名) 添加到.h中
 2.将 singleton_implementation(类名) 添加到.m中
 */
#define singleton_interface(class) ___SIN_INTERFACE(class)
#define singleton_implementation(class) ___SIN_IMPLEMENTATION(class)

/**
 重写init方法，让init方法读取nib文件
 使用方法:
 将 INITXIB(NibName) 添加到.m中
 */
#define INITXIB(NibName) ___INITXIB_M(@#NibName)

/**
 创建initWithXibFrame方法，读取nib文件，设置frame
 使用方法:
 将 INITXIBWITHFRAME(NibName) 添加到.m中
 */
#define INITXIBWITHFRAME(NibName) ___INITXYHWithFrame(NibName)

#pragma mark end

#pragma mark - @implementation

//单利.h
#define ___SIN_INTERFACE(class) + (instancetype)shared##class;

//单利.m
#define ___SIN_IMPLEMENTATION(class) \
static class *_instance; \
\
+ (id)allocWithZone:(struct _NSZone *)zone \
{ \
static dispatch_once_t onceToken; \
dispatch_once(&onceToken, ^{ \
_instance = [super allocWithZone:zone]; \
}); \
\
return _instance; \
} \
\
+ (instancetype)shared##class \
{ \
if (_instance == nil) { \
_instance = [[class alloc] init]; \
} \
\
return _instance; \
}

//初始化xib.m
#define ___INITXIB_M(NSString_NibName) \
- (instancetype)init {\
return [[NSBundle mainBundle] loadNibNamed:NSString_NibName owner:nil options:nil][0];\
}

//初始化xib带frame.m
#define ___INITXYHWithFrame(NibName_NSString)\
- (instancetype)initWithXibFrame:(CGRect)frame {\
    NibName_NSString * abcdefg = [[NSBundle mainBundle] loadNibNamed:@#NibName_NSString owner:nil options:nil][0];\
    [abcdefg setFrame:frame];\
    return abcdefg;\
}

#pragma mark end
#endif